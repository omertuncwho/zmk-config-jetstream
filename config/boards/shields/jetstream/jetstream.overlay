/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    encoder: encoder {
		compatible = "alps,ec11";
        a-gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors {
		compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        
        diode-direction = "col2row";

        col-gpios
            = <&gpio0 8  GPIO_ACTIVE_HIGH> // col1
            , <&gpio0 22 GPIO_ACTIVE_HIGH> // col2
            , <&gpio0 24 GPIO_ACTIVE_HIGH> // col3
            , <&gpio1 0  GPIO_ACTIVE_HIGH> // col4
            , <&gpio0 11 GPIO_ACTIVE_HIGH> // col5
            , <&gpio1 13 GPIO_ACTIVE_HIGH> // col6
            , <&gpio1 15 GPIO_ACTIVE_HIGH> // col7
            , <&gpio0 2  GPIO_ACTIVE_HIGH> // col8
            , <&gpio0 29 GPIO_ACTIVE_HIGH> // col9
            , <&gpio0 31 GPIO_ACTIVE_HIGH> // col10
            ;

        row-gpios
            = <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row1
            , <&gpio1 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row2
            , <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row3
            , <&gpio1 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row4
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
        map = <
          RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)           RC(0,5)  RC(0,6)  RC(0,7)  RC(0,8) RC(0,9)
          RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)           RC(1,5)  RC(1,6)  RC(1,7)  RC(1,8) RC(1,9)
          RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(3,1)  RC(2,5)  RC(2,6)  RC(2,7)  RC(2,8) RC(2,9)  
                            RC(3,2)  RC(3,3)  RC(3,4)           RC(3,5)  RC(3,6)  RC(3,7)  
        >;
    };
    
};

